services:
  eazyfind-db:
    image: postgres:17
    container_name: eazyfind-db
    environment:
      POSTGRES_USER: ${EAZYFIND_DB_USER}
      POSTGRES_PASSWORD: ${EAZYFIND_DB_PASSWORD}
      POSTGRES_DB: ${EAZYFIND_DB_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${EAZYFIND_DB_USER} -d ${EAZYFIND_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - eazyfind-db-data:/var/lib/postgresql/data
      - ./init-eazyfind.sql:/docker-entrypoint-initdb.d/init-eazyfind.sql:ro
    networks:
      - eazyfind-net

  eazyfind-api:
    build:
      context: .
      dockerfile: src/EazyFind.API/Dockerfile
    container_name: eazyfind-api
    depends_on:
      eazyfind-db:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__EazyFindDatabase=${EAZYFIND_DB_CONN}
      - TelegramBot__BotToken=${EAZYFIND_BOT_TOKEN}
    ports:
      - "${EAZYFIND_API_PORT}:8080"
    networks:
      - eazyfind-net

  eazyfind-jobs:
    build:
      context: .
      dockerfile: jobs/EazyFind.Jobs/Dockerfile
    container_name: eazyfind-jobs
    depends_on:
      eazyfind-db:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__EazyFindDatabase=${EAZYFIND_DB_CONN}
      - ConnectionStrings__HangfireDatabase=${EAZYFIND_DB_CONN}
    ports:
      - "${EAZYFIND_JOBS_PORT}:8080"
    networks:
      - eazyfind-net

  eazyfind-bot:
    build:
      context: .
      dockerfile: bots/EazyFind.TelegramBot/Dockerfile
    container_name: eazyfind-bot
    depends_on:
      eazyfind-db:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__EazyFindDatabase=${EAZYFIND_DB_CONN}
      - TelegramBot__BotToken=${EAZYFIND_BOT_TOKEN}
    networks:
      - eazyfind-net

volumes:
  eazyfind-db-data:

networks:
  eazyfind-net:
    driver: bridge
